#
# This is STIF initialization file
# Comment lines start with '#'-character.
# See STIF TestFramework users guide.doc for instructions

# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
# Set following test engine settings:
#	- Set Test Reporting mode. TestReportMode's possible values are:
#		+ 'Summary': Summary of the tested test cases.
#		+ 'Environment': Hardware and software info.
#		+ 'TestCases': Test case report.
#		+ 'FullReport': Set of all above ones.
#		+ Example 'TestReportMode= Summary TestCases'
#
# 	- CreateTestReport setting controls report creation mode
#		+ YES, Test report will created.
#		+ NO, No Test report.
#
# 	- File path indicates the base path of the test report.
# 	- File name indicates the name of the test report.
#
# 	- File format indicates the type of the test report.
#		+ TXT, Test report file will be txt type, for example 'TestReport.txt'.
#		+ HTML, Test report will be html type, for example 'TestReport.html'.
#
# 	- File output indicates output source of the test report.
#		+ FILE, Test report logging to file.
#		+ RDEBUG, Test report logging to using rdebug.
#
# 	- File Creation Mode indicates test report overwriting if file exist.
#		+ OVERWRITE, Overwrites if the Test report file exist.
#		+ APPEND, Continue logging after the old Test report information if
#                 report exist.
# 	- Sets a device reset module's dll name(Reboot).
#		+ If Nokia specific reset module is not available or it is not correct one
#		  StifHWResetStub module may use as a template for user specific reset
#		  module.
# 	- Sets STIF test measurement disable options. e.g. pluging1 and pluging2 disablation
#		DisableMeasurement= stifmeasurementplugin01 stifmeasurementplugin02
#

[Engine_Defaults]

TestReportMode= FullReport		# Possible values are: 'Empty', 'Summary', 'Environment',
                                                               'TestCases' or 'FullReport'

CreateTestReport= YES			# Possible values: YES or NO

TestReportFilePath= C:\LOGS\TestFramework\
TestReportFileName= TestReport

TestReportFormat= TXT			# Possible values: TXT or HTML
TestReportOutput= FILE			# Possible values: FILE or RDEBUG
TestReportFileCreationMode= OVERWRITE	# Possible values: OVERWRITE or APPEND

DeviceResetDllName= StifResetForNokia.dll # e.g. 'StifHWResetStub.dll' for user specific reseting

DisableMeasurement= stifmeasurementdisablenone	# Possible values are:
						# 'stifmeasurementdisablenone', 'stifmeasurementdisableall'
					  	# 'stifmeasurementplugin01', 'stifmeasurementplugin02',
					  	# 'stifmeasurementplugin03', 'stifmeasurementplugin04',
					  	# 'stifmeasurementplugin05' or 'stifbappeaprofiler'

Timeout= 0                              # Default timeout value for each test case. In milliseconds

[End_Defaults]
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --



# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
# Module configurations start
# Modules are added between module tags
# tags. Module name is specified after ModuleName= tag, like
# ModuleName= XXXXXXXXX
# Modules might have initialisation file, specified as
# IniFile= c:\testframework\YYYYYY
# Modules might have several configuration files, like
# TestCaseFile= c:\testframework\NormalCases.txt
# TestCaseFile= c:\testframework\SmokeCases.txt
# TestCaseFile= c:\testframework\ManualCases.txt

# (TestCaseFile is synonym for old term ConfigFile)

# Following case specifies demo module settings. Demo module
# does not read any settings from file, so tags 
# IniFile and TestCaseFile are not used.
# In the simplest case it is enough to specify only the
# name of the test module when adding new test module

[New_Module]
ModuleName= TestScripter
TestCaseFile= c:\testframework\btengapi_scripter.cfg
[End_Module]


# Load testmoduleXXX, optionally with initialization file and/or test case files
#[New_Module]
#ModuleName= testmodulexxx

#TestModuleXXX used initialization file
#IniFile= c:\testframework\init.txt

#TestModuleXXX used configuration file(s)
#TestCaseFile= c:\testframework\testcases1.cfg
#TestCaseFile= c:\testframework\testcases2.cfg
#TestCaseFile= c:\testframework\manualtestcases.cfg

#[End_Module]
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --



# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
# Set STIF logging overwrite parameters for Logger.
# 	Hardware and emulator environment logging path and styles can
# 	be configured from here to overwrite the Logger's implemented values.
#	
#	Settings description:
#	- Indicates option for creation log directory/directories. If log directory/directories
#         is/are not created by user they will make by software.
#		+ YES, Create log directory/directories if not allready exist.
#		+ NO, Log directory/directories not created. Only created one is used.
#
#	- Overwrite emulator path setting.
#		+ Example: If 'EmulatorBasePath= C:\LOGS\TestFramework\' and in code is defined 
#		           Logger's path 'D:\\LOGS\\Module\\' with those definition the path
#		           will be 'C:\LOGS\TestFramework\LOGS\Module\'
#
#	- Overwrite emulator's logging format.
#		+ TXT, Log file(s) will be txt type(s), for example 'Module.txt'.
#		+ HTML, Log file(s) will be html type(s), for example 'Module.html'.
#
#	- Overwrited emulator logging output source.
#		+ FILE, Logging to file(s).
#		+ RDEBUG, Logging to using rdebug(s).
#
#	- Overwrite hardware path setting (Same description as above in emulator path).
#	- Overwrite hardware's logging format(Same description as above in emulator format).
#	- Overwrite hardware's logging output source(Same description as above in emulator output).
#
#	- File Creation Mode indicates file overwriting if file exist.
#		+ OVERWRITE, Overwrites if file(s) exist.
#		+ APPEND, Continue logging after the old logging information if file(s) exist.
#
#	- Will thread id include to the log filename.
#		+ YES, Thread id to log file(s) name, Example filename 'Module_b9.txt'.
#		+ NO, No thread id to log file(s), Example filename 'Module.txt'.
#
#	- Will time stamps include the to log file.
#		+ YES, Time stamp added to each line in log file(s). Time stamp is 
#                 for example'12.Nov.2003 115958    LOGGING INFO'
#		+ NO, No time stamp(s).
#
#	- Will line breaks include to the log file.
#		+ YES, Each logging event includes line break and next log event is in own line.
#		+ NO, No line break(s).
#
#	- Will event ranking include to the log file.
#		+ YES, Event ranking number added to each line in log file(s). Ranking number
#                 depends on environment's tics, for example(includes time stamp also)
#                 '012   12.Nov.2003 115958    LOGGING INFO'
#		+ NO, No event ranking.
#
#	- Will write log file in unicode format.
#		+ YES, Log file will be written in unicode format
#		+ NO, Log will be written as normal, not unicode, file.
#

[Logger_Defaults]

#NOTE: If you want to set Logger using next setting(s) remove comment(s)'#'
#NOTE: TestEngine and TestServer logging settings cannot change here

#CreateLogDirectories= YES		# Possible values: YES or NO

#EmulatorBasePath= C:\LOGS\TestFramework\
#EmulatorFormat= HTML			# Possible values: TXT or HTML
#EmulatorOutput= FILE			# Possible values: FILE or RDEBUG

#HardwareBasePath= D:\LOGS\TestFramework\
#HardwareFormat= HTML			# Possible values: TXT or HTML
#HardwareOutput= FILE			# Possible values: FILE or RDEBUG

#FileCreationMode= OVERWRITE		# Possible values: OVERWRITE or APPEND

#ThreadIdToLogFile= YES			# Possible values: YES or NO
#WithTimeStamp= YES			# Possible values: YES or NO
#WithLineBreak= YES			# Possible values: YES or NO
#WithEventRanking= YES			# Possible values: YES or NO

#FileUnicode= YES			# Possible values: YES or NO

[End_Logger_Defaults]
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

# End of file